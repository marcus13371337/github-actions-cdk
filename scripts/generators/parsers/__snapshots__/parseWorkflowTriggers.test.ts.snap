// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parseWorkflowTriggers should parse the workflow trigger correctly 1`] = `
[
  {
    "githubRef": "Default branch",
    "githubSha": "Last commit on default branch",
    "name": "branch_protection_rule",
    "types": [
      "created",
      "edited",
      "deleted",
    ],
  },
  {
    "githubRef": "Default branch",
    "githubSha": "Last commit on default branch",
    "name": "check_run",
    "types": [
      "created",
      "rerequested",
      "completed",
      "requested_action",
    ],
  },
  {
    "githubRef": "Default branch",
    "githubSha": "Last commit on default branch",
    "name": "check_suite",
    "types": [
      "completed",
    ],
  },
  {
    "githubRef": "Branch or tag created",
    "githubSha": "Last commit on the created branch or tag",
    "name": "create",
    "types": [],
  },
  {
    "githubRef": "Default branch",
    "githubSha": "Last commit on default branch",
    "name": "delete",
    "types": [],
  },
  {
    "githubRef": "Branch or tag to be deployed (empty if created with a commit SHA)",
    "githubSha": "Commit to be deployed",
    "name": "deployment",
    "types": [],
  },
  {
    "githubRef": "Branch or tag to be deployed (empty if commit)",
    "githubSha": "Commit to be deployed",
    "name": "deployment_status",
    "types": [],
  },
  {
    "githubRef": "Default branch",
    "githubSha": "Last commit on default branch",
    "name": "discussion",
    "types": [
      "created",
      "edited",
      "deleted",
      "transferred",
      "pinned",
      "unpinned",
      "labeled",
      "unlabeled",
      "locked",
      "unlocked",
      "category_changed ",
      "answered ",
      "unanswered",
    ],
  },
  {
    "githubRef": "Default branch",
    "githubSha": "Last commit on default branch",
    "name": "discussion_comment",
    "types": [
      "created",
      "edited",
      "deleted",
    ],
  },
  {
    "githubRef": "Default branch",
    "githubSha": "Last commit on default branch",
    "name": "fork",
    "types": [],
  },
  {
    "githubRef": "Default branch",
    "githubSha": "Last commit on default branch",
    "name": "gollum",
    "types": [],
  },
  {
    "githubRef": "Default branch",
    "githubSha": "Last commit on default branch",
    "name": "issue_comment",
    "types": [
      "created",
      "edited",
      "deleted",
    ],
  },
  {
    "githubRef": "Default branch",
    "githubSha": "Last commit on default branch",
    "name": "issues",
    "types": [
      "opened",
      "edited",
      "deleted",
      "transferred",
      "pinned",
      "unpinned",
      "closed",
      "reopened",
      "assigned",
      "unassigned",
      "labeled",
      "unlabeled",
      "locked",
      "unlocked",
      "milestoned ",
      "demilestoned",
    ],
  },
  {
    "githubRef": "Default branch",
    "githubSha": "Last commit on default branch",
    "name": "label",
    "types": [
      "created",
      "edited",
      "deleted",
    ],
  },
  {
    "githubRef": "Ref of the merge group",
    "githubSha": "SHA of the merge group",
    "name": "merge_group",
    "types": [
      "checks_requested",
    ],
  },
  {
    "githubRef": "Default branch",
    "githubSha": "Last commit on default branch",
    "name": "milestone",
    "types": [
      "created",
      "closed",
      "opened",
      "edited",
      "deleted",
    ],
  },
  {
    "githubRef": "n/a",
    "githubSha": "Last commit on default branch",
    "name": "page_build",
    "types": [],
  },
  {
    "githubRef": "Default branch",
    "githubSha": "Last commit on default branch",
    "name": "project",
    "types": [
      "created",
      "closed",
      "reopened",
      "edited",
      "deleted",
    ],
  },
  {
    "githubRef": "Default branch",
    "githubSha": "Last commit on default branch",
    "name": "project_card",
    "types": [
      "created",
      "moved",
      "converted to an issue",
      "edited",
      "deleted",
    ],
  },
  {
    "githubRef": "Default branch",
    "githubSha": "Last commit on default branch",
    "name": "project_column",
    "types": [
      "created",
      "updated",
      "moved",
      "deleted",
    ],
  },
  {
    "githubRef": "Default branch",
    "githubSha": "Last commit on default branch",
    "name": "public",
    "types": [],
  },
  {
    "githubRef": "PR merge branch refs/pull/:prNumber/merge",
    "githubSha": "Last merge commit on the GITHUB_REF branch",
    "name": "pull_request",
    "types": [
      "assigned",
      "unassigned",
      "labeled",
      "unlabeled",
      "opened",
      "edited",
      "closed",
      "reopened",
      "synchronize",
      "converted_to_draft",
      "ready_for_review",
      "locked",
      "unlocked ",
      "review_requested ",
      "review_request_removed ",
      "auto_merge_enabled ",
      "auto_merge_disabled",
    ],
  },
  {
    "githubRef": "",
    "githubSha": "",
    "name": "pull_request_comment-use-issue_comment",
    "types": [],
  },
  {
    "githubRef": "PR merge branch refs/pull/:prNumber/merge",
    "githubSha": "Last merge commit on the GITHUB_REF branch",
    "name": "pull_request_review",
    "types": [
      "submitted",
      "edited",
      "dismissed",
    ],
  },
  {
    "githubRef": "PR merge branch refs/pull/:prNumber/merge",
    "githubSha": "Last merge commit on the GITHUB_REF branch",
    "name": "pull_request_review_comment",
    "types": [
      "created",
      "edited",
      "deleted",
    ],
  },
  {
    "githubRef": "PR base branch",
    "githubSha": "Last commit on the PR base branch",
    "name": "pull_request_target",
    "types": [
      "assigned",
      "unassigned",
      "labeled",
      "unlabeled",
      "opened",
      "edited",
      "closed",
      "reopened",
      "synchronize",
      "converted_to_draft",
      "ready_for_review",
      "locked",
      "unlocked ",
      "review_requested ",
      "review_request_removed ",
      "auto_merge_enabled ",
      "auto_merge_disabled",
    ],
  },
  {
    "githubRef": "Updated ref",
    "githubSha": "When you delete a branch, the SHA in the workflow run (and its associated refs) reverts to the default branch of the repository.",
    "name": "push",
    "types": [],
  },
  {
    "githubRef": "Branch or tag of the published package",
    "githubSha": "Commit of the published package",
    "name": "registry_package",
    "types": [
      "published",
      "updated",
    ],
  },
  {
    "githubRef": "Tag ref of release refs/tags/<tag_name>",
    "githubSha": "Last commit in the tagged release",
    "name": "release",
    "types": [
      "published ",
      "unpublished ",
      "created ",
      "edited ",
      "deleted ",
      "prereleased ",
      "released",
    ],
  },
  {
    "githubRef": "Default branch",
    "githubSha": "Last commit on default branch",
    "name": "repository_dispatch",
    "types": [
      "*",
    ],
  },
  {
    "githubRef": "Default branch",
    "githubSha": "Last commit on default branch",
    "name": "schedule",
    "types": [],
  },
  {
    "githubRef": "n/a",
    "githubSha": "Last commit on default branch",
    "name": "status",
    "types": [],
  },
  {
    "githubRef": "Default branch",
    "githubSha": "Last commit on default branch",
    "name": "watch",
    "types": [
      "started",
    ],
  },
  {
    "githubRef": "Same as the caller workflow",
    "githubSha": "Same as the caller workflow",
    "name": "workflow_call",
    "types": [],
  },
  {
    "githubRef": "Branch or tag that received dispatch",
    "githubSha": "Last commit on the GITHUB_REF branch or tag",
    "name": "workflow_dispatch",
    "types": [],
  },
  {
    "githubRef": "Default branch",
    "githubSha": "Last commit on default branch",
    "name": "workflow_run",
    "types": [
      "completed",
      "requested",
      "in_progress",
    ],
  },
]
`;
